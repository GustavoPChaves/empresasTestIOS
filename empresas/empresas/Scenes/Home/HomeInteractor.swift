//
//  HomeInteractor.swift
//  empresas
//
//  Created by Gustavo Chaves on 18/05/20.
//  Copyright (c) 2020 Gustavo Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
  func doSomething(request: Home.Something.Request)
}

protocol HomeDataStore
{
  //var name: String { get set }
    var headers: Headers { get set}
    var user: LoginResponse { get set}
    var enterprises: [Enterprise] { get set}
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var enterprises: [Enterprise] = [Enterprise]()
    
  var presenter: HomePresentationLogic?
  var worker: HomeWorker?
  //var name: String = ""
    var user: LoginResponse = LoginResponse(success: false, investor: nil, enterprise: nil, errors: nil)
    
    var headers = Headers(token: "", uid: "", client: "")
  
  // MARK: Do something
  
  func doSomething(request: Home.Something.Request)
  {
    worker = HomeWorker()
    worker?.doSomeWork(type: user.investor?.id ?? 1, name: request.searchTerm, headers: headers, completion: { (enterpriseResponse) in
        if let enterprise = enterpriseResponse?.enterprises{
            self.enterprises = enterprise
            let response = Home.Something.Response(enterprises: enterprise)
            self.presenter?.presentSomething(response: response)
            
        }
    })
  }
    
    
}
